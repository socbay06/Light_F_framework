%Bicubic interpolation
row=0;
column=0;
color=1;
for color =1:3
    for row=4:796
        y=row/2;
        s_y=y-floor(y);
        for column=4:1196
            x=column/2;
            s_x=x-floor(x);
            %leafX2(row,column,color)=CubicConvolutionKernel(1-s_x)*((leaf(floor(y)-1,floor(x)-1)*CubicConvolutionKernel(s_y+1))+(leaf(floor(y),floor(x)-1)*CubicConvolutionKernel(s_y))+(leaf(floor(y)+1,floor(x)-1)*CubicConvolutionKernel(s_y))+(leaf(floor(y)+2,floor(x)-1)*CubicConvolutionKernel(s_y+1)));
            leafX2(row,column,color)=...
                (...
                leaf(floor(y)-1,floor(x)-1,color)*CubicConvolutionKernel(s_x+1)*CubicConvolutionKernel(s_y+1) ...
                +leaf(floor(y)-1,floor(x),color)*CubicConvolutionKernel(s_x)*CubicConvolutionKernel(s_y+1) ...
                +leaf(floor(y)-1,floor(x)+1,color)*CubicConvolutionKernel(s_x)*CubicConvolutionKernel(s_y+1) ...
                +leaf(floor(y)-1,floor(x)+2,color)*CubicConvolutionKernel(s_x+1)*CubicConvolutionKernel(s_y+1) ...
                +leaf(floor(y),floor(x)-1,color)*CubicConvolutionKernel(s_x+1)*CubicConvolutionKernel(s_y) ...
                +leaf(floor(y),floor(x),color)*CubicConvolutionKernel(s_x)*CubicConvolutionKernel(s_y) ...
                +leaf(floor(y),floor(x)+1,color)*CubicConvolutionKernel(s_x)*CubicConvolutionKernel(s_y) ...
                +leaf(floor(y),floor(x)+2,color)*CubicConvolutionKernel(s_x+1)*CubicConvolutionKernel(s_y) ...
                +leaf(floor(y)+1,floor(x)-1,color)*CubicConvolutionKernel(s_x+1)*CubicConvolutionKernel(s_y) ...
                +leaf(floor(y)+1,floor(x),color)*CubicConvolutionKernel(s_x)*CubicConvolutionKernel(s_y) ...
                +leaf(floor(y)+1,floor(x)+1,color)*CubicConvolutionKernel(s_x)*CubicConvolutionKernel(s_y) ...
                +leaf(floor(y)+1,floor(x)+2,color)*CubicConvolutionKernel(s_x+1)*CubicConvolutionKernel(s_y) ...
                +leaf(floor(y)+2,floor(x)-1,color)*CubicConvolutionKernel(s_x+1)*CubicConvolutionKernel(s_y+1) ...
                +leaf(floor(y)+2,floor(x),color)*CubicConvolutionKernel(s_x)*CubicConvolutionKernel(s_y+1) ...
                +leaf(floor(y)+2,floor(x)+1,color)*CubicConvolutionKernel(s_x)*CubicConvolutionKernel(s_y+1) ...
                +leaf(floor(y)+2,floor(x)+2,color)*CubicConvolutionKernel(s_x+1)*CubicConvolutionKernel(s_y+1) ...
                );
        end
    end
end
imshow(leafX2);
    